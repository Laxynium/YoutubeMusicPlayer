<?xml version="1.0" encoding="utf-8" ?>
<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
             xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
             xmlns:converters="clr-namespace:YoutubeMusicPlayer.Framework.Converters;assembly=YoutubeMusicPlayer"
             x:Class="YoutubeMusicPlayer.PlaylistManagement.PlaylistSongsPopupPage" 
             Title="Playlist songs"
             HasSystemPadding="True">
    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <converters:InvertBoolConverter x:Key="InvertBool"></converters:InvertBoolConverter>
        </ResourceDictionary>
    </pages:PopupPage.Resources>
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation 
            PositionIn="Center"
            PositionOut="Center"
            ScaleIn="1.2"
            ScaleOut="0.8"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True"/>
    </pages:PopupPage.Animation>
    <!--You can use any elements here which are extended from Xamarin.Forms.View-->
    <pages:PopupPage.Content>
        <RelativeLayout VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" Opacity="1" BackgroundColor="AntiqueWhite">
            <StackLayout Orientation="Horizontal"
                         
                         RelativeLayout.YConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Height,
                             Factor=0.0
                             }"
                         RelativeLayout.HeightConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Height,
                             Factor=0.1
                             }"
                         RelativeLayout.WidthConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Width,
                             Factor=1
                             }"
            >
                <Button Text="Add songs" HorizontalOptions="StartAndExpand" Command="{Binding AddSongs}" IsVisible="{Binding Path=IsVisible,Source={x:Reference SaveBtn}, Converter={StaticResource InvertBool}}"/>
                <Button x:Name="RemoveBtn" Command="{Binding ChangeState}" Text="Remove songs" HorizontalOptions="EndAndExpand" IsVisible="{Binding IsNormalState}"></Button>
                <Button x:Name="CancelBtn" Command="{Binding ChangeState}" Text="Cancel" HorizontalOptions="StartAndExpand" IsVisible="{Binding Path=IsVisible,Source={x:Reference RemoveBtn},Converter={StaticResource InvertBool}}"/>
                <Button x:Name="SaveBtn" Command="{Binding RemoveSongs}" Text="Save" HorizontalOptions="EndAndExpand" IsVisible="{Binding Path=IsVisible,Source={x:Reference RemoveBtn},Converter={StaticResource InvertBool}}"/>
            </StackLayout>
            <ListView  x:Name="ListView"
                       ItemsSource="{Binding Songs, Mode=TwoWay}"
                       RelativeLayout.YConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Height,
                             Factor=0.1
                             }"
                      RelativeLayout.HeightConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Height,
                             Factor=0.8
                             }"
                      RelativeLayout.WidthConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Width,
                             Factor=1
                             }">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <!--<ViewCell.ContextActions>
                                <MenuItem Text="Remove" CommandParameter="{Binding .}" Command="{Binding Source={x:Reference ListView}, Path=BindingContext.RemoveSong}" IsDestructive="True"/>
                            </ViewCell.ContextActions>-->
                            <StackLayout Orientation="Horizontal" Opacity="1">
                                <Image Source="{Binding ImageSource}"  VerticalOptions="Center" Aspect="Fill" HorizontalOptions="StartAndExpand"/>
                                <Label Text="{Binding Title}" HorizontalOptions="CenterAndExpand" VerticalOptions="Center" VerticalTextAlignment="Center" LineBreakMode="TailTruncation"/>
                                <CheckBox 
                                    IsChecked="{Binding IsPicked, Mode=TwoWay}" 
                                    Color="DeepSkyBlue" 
                                    IsVisible="{Binding Source={x:Reference RemoveBtn},Path=IsVisible, 
                                    Converter={StaticResource InvertBool}} "
                                    />
                            </StackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <StackLayout Orientation="Horizontal" Opacity="1" 
                         
                         RelativeLayout.YConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Height,
                             Factor=0.9
                             }"
                         RelativeLayout.HeightConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Height,
                             Factor=0.10
                             }"
                         RelativeLayout.WidthConstraint ="{ConstraintExpression 
                             Type=RelativeToParent,
                             Property=Width,
                             Factor=1
                             }"
            >
                <Button Text="Go back" 
                        HorizontalOptions="StartAndExpand" VerticalOptions="Center" Command="{Binding GoBack}"/>
            </StackLayout>

        </RelativeLayout>

    </pages:PopupPage.Content>
</pages:PopupPage>